import { createActions } from 'redux-actions';

const {
  getShopAuthors,
  getShopAuthorsFailed,
  getShopAuthorsSucceed,
  addShopAuthor,
  addShopAuthorFailed,
  addShopAuthorSucceed,
  editShopAuthor,
  editShopAuthorFailed,
  editShopAuthorSucceed,
  createShopAuthor,
  createShopAuthorFailed,
  createShopAuthorSucceed,
  updateShopAuthor,
  updateShopAuthorFailed,
  updateShopAuthorSucceed,
  showShopAuthor,
  showShopAuthorFailed,
  showShopAuthorSucceed,
  deleteShopAuthor,
  deleteShopAuthorSucceed,
  deleteShopAuthorFailed,
} = createActions({
  GET_SHOP_AUTHORS: (params) => ({params}),
  GET_SHOP_AUTHORS_FAILED: error => ({ error }),
  GET_SHOP_AUTHORS_SUCCEED: shopAuthors => ({ shopAuthors }),
  ADD_SHOP_AUTHOR: (params) => ({params}),
  ADD_SHOP_AUTHOR_FAILED: error => ({ error }),
  ADD_SHOP_AUTHOR_SUCCEED: shopAuthor => ({ shopAuthor }),
  EDIT_SHOP_AUTHOR: (id) => ({id}),
  EDIT_SHOP_AUTHOR_FAILED: error => ({ error }),
  EDIT_SHOP_AUTHOR_SUCCEED: shopAuthor => ({ shopAuthor }),
  CREATE_SHOP_AUTHOR: () => ({}),
  CREATE_SHOP_AUTHOR_FAILED: error => ({ error }),
  CREATE_SHOP_AUTHOR_SUCCEED: shopAuthor => ({ shopAuthor }),
  UPDATE_SHOP_AUTHOR: (id, params) => ({id: id, params: params}),
  UPDATE_SHOP_AUTHOR_FAILED: error => ({ error }),
  UPDATE_SHOP_AUTHOR_SUCCEED: id => ({ id }),
  SHOW_SHOP_AUTHOR: (id) => ({id}),
  SHOW_SHOP_AUTHOR_FAILED: error => ({ error }),
  SHOW_SHOP_AUTHOR_SUCCEED: shopAuthor => ({ shopAuthor }),
  DELETE_SHOP_AUTHOR: (id) => ({id}),
  DELETE_SHOP_AUTHOR_SUCCEED: (id) => ({id}),
  DELETE_SHOP_AUTHOR_FAILED: (error) => ({error}),
});

export {
  getShopAuthors,
  getShopAuthorsFailed,
  getShopAuthorsSucceed,
  addShopAuthor,
  addShopAuthorFailed,
  addShopAuthorSucceed,
  editShopAuthor,
  editShopAuthorFailed,
  editShopAuthorSucceed,
  createShopAuthor,
  createShopAuthorFailed,
  createShopAuthorSucceed,
  updateShopAuthor,
  updateShopAuthorFailed,
  updateShopAuthorSucceed,
  showShopAuthor,
  showShopAuthorFailed,
  showShopAuthorSucceed,
  deleteShopAuthor,
  deleteShopAuthorSucceed,
  deleteShopAuthorFailed,
};
